{"ast":null,"code":"var _jsxFileName = \"/Users/chrishar/Desktop/untitled folder/edvora/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Posts from './components/Posts';\nimport Pagination from './components/Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(10);\n\n  const fetchPosts = async () => {\n    setLoading(true);\n    const res = await axios.get('https://assessment-edvora.herokuapp.com');\n    setPosts(res.data);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n\n  function compareName(a, b) {\n    // converting to uppercase to have case-insensitive comparison\n    const product_name1 = a.product_name.toUpperCase();\n    const product_name2 = b.product_name.toUpperCase();\n    let comparison = 0;\n\n    if (product_name1 > product_name2) {\n      comparison = 1;\n    } else if (product_name1 < product_name2) {\n      comparison = -1;\n    }\n\n    return comparison;\n  }\n\n  function group(posts) {\n    let map = new Map(posts.map(o => [o.product_name, []]));\n\n    for (let o of posts) map.get(o.product_name).push(o);\n\n    return [...[...map.values()].filter(_ref => {\n      let {\n        length\n      } = _ref;\n      return length > 1;\n    }), [...map.values()].filter(_ref2 => {\n      let {\n        length\n      } = _ref2;\n      return length === 1;\n    }).flat()];\n  } //Get current posts\n\n\n  let indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = group(posts.sort(compareName)).slice(indexOfFirstPost, indexOfLastPost); // Change Page\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [console.log('compareName', currentPosts), console.log('currentPosts', currentPosts), \"App\", /*#__PURE__*/_jsxDEV(Posts, {\n      postsPerPage: postsPerPage,\n      totalPosts: posts.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      postsPerPage: postsPerPage,\n      totalPosts: posts.length,\n      paginate: paginate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"DSGvplqIYAfGD/AB/Q3MgRvPQrw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/chrishar/Desktop/untitled folder/edvora/src/App.js"],"names":["React","useState","useEffect","axios","Posts","Pagination","App","posts","setPosts","loading","setLoading","currentPage","setCurrentPage","postsPerPage","fetchPosts","res","get","data","compareName","a","b","product_name1","product_name","toUpperCase","product_name2","comparison","group","map","Map","o","push","values","filter","length","flat","indexOfLastPost","indexOfFirstPost","currentPosts","sort","slice","paginate","pageNumber","console","log"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Posts from './components/Posts';\nimport Pagination from './components/Pagination';\n\n\n\nfunction App() {\n\n  const [posts,setPosts]=useState([]);\n  const [loading,setLoading]= useState(false);\n  const [currentPage,setCurrentPage]=useState(1);\n  const [postsPerPage]=useState(10);\n\n  const fetchPosts = async ()=>{\n    setLoading(true);\n    const res = await axios.get('https://assessment-edvora.herokuapp.com');\n    setPosts(res.data);\n    setLoading(false);\n  }\n  useEffect(()=>{\n    fetchPosts();\n  },[]); \n\n  function compareName(a, b) {\n\n    // converting to uppercase to have case-insensitive comparison\n    const product_name1 =  a.product_name.toUpperCase();\n    const product_name2 =  b.product_name.toUpperCase();\n\n    let comparison = 0;\n\n    if (product_name1 > product_name2) {\n        comparison = 1;\n    } else if (product_name1 < product_name2) {\n        comparison = -1;\n    }\n    return comparison;\n}\n\nfunction group(posts) {\n  let map = new Map(posts.map(o => [o.product_name, []]));\n  for (let o of posts) map.get(o.product_name).push(o);\n \n  return [\n      ...[...map.values()].filter(({length}) => length > 1),\n      [...map.values()].filter(({length}) => length === 1).flat()\n    \n  ];\n\n \n}\n\n  //Get current posts\n\n  let indexOfLastPost = currentPage *  postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts  = group(posts.sort(compareName)).slice(indexOfFirstPost,indexOfLastPost);\n\n  // Change Page\n\n  const  paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n\n\n  return (\n\n    <div>\n       {/* {console.log(posts)} */}\n       { console.log('compareName',currentPosts)}\n       { console.log('currentPosts',currentPosts)}\n      App\n      <Posts postsPerPage={postsPerPage} totalPosts={posts.length} />\n      <Pagination postsPerPage={postsPerPage} totalPosts={posts.length} paginate={paginate} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}