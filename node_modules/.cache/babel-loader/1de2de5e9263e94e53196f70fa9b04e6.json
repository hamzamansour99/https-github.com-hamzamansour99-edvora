{"ast":null,"code":"var _jsxFileName = \"/Users/chrishar/Desktop/untitled folder/edvora/src/components/Posts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport PaginatedItems from './PaginatedItems';\nimport Pagination from './Pagination';\nimport Posts2 from './Posts2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Posts(_ref) {\n  _s();\n\n  let {\n    posts,\n    loading\n  } = _ref;\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(10);\n  const [data, SetData] = useState([]);\n  const firstRun = useRef(true); // var valueArr = posts.map(function(item){ return item.product_name });\n  // var isDuplicate = valueArr.some(function(item, idx){ \n  //     return valueArr.indexOf(item) !== idx \n  // });\n  // function group(posts) {\n  //     let map = new Map(posts.map(o => [o.product_name, []]));\n  //     for (let o of posts) map.get(o.product_name).push(o);\n  //    let arr = [\n  //         ...[...map.values()].filter(({length}) => length > 1),\n  //         [...map.values()].filter(({length}) => length === 1).flat()\n  //     ];\n  //     return <div>\n  // <div>\n  //   {Object.keys(arr).map((key) => {\n  //      return (\n  //        <div key={key}>\n  //           <h1>{arr[key][key]?.product_name}</h1>\n  //           {arr[key].map((dataItem,index) => {\n  //             return (\n  //              <li key={index}>{dataItem.product_name}</li>\n  //             )\n  //            })}\n  //        </div>\n  //      )\n  //    })}\n  //  </div>\n  //     </div>\n  // }\n  //   let indexOfLastPost = currentPage *  postsPerPage;\n  //   const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  //   const currentPosts  = posts.slice(indexOfFirstPost,indexOfLastPost);\n  //   const  paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  console.log('inside', posts);\n  useEffect(() => {\n    // skip the first run\n    if (firstRun.current) {\n      firstRun.current = false;\n      return;\n    }\n\n    SetData(posts);\n  }, [posts]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(PaginatedItems, {\n      itemsPerPage: 4,\n      posts: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Posts, \"3nwgCZqLw+QCmC5r4caRiupEgGI=\");\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/Users/chrishar/Desktop/untitled folder/edvora/src/components/Posts.js"],"names":["React","useState","useEffect","useRef","PaginatedItems","Pagination","Posts2","Posts","posts","loading","currentPage","setCurrentPage","postsPerPage","data","SetData","firstRun","console","log","current"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,EAAkCC,MAAlC,QAA+C,OAA/C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;;AAEA,SAASC,KAAT,OAAgC;AAAA;;AAAA,MAAjB;AAACC,IAAAA,KAAD;AAAOC,IAAAA;AAAP,GAAiB;AAC5B,QAAM,CAACC,WAAD,EAAaC,cAAb,IAA6BV,QAAQ,CAAC,CAAD,CAA3C;AACA,QAAM,CAACW,YAAD,IAAeX,QAAQ,CAAC,EAAD,CAA7B;AACA,QAAM,CAACY,IAAD,EAAMC,OAAN,IAAeb,QAAQ,CAAC,EAAD,CAA7B;AACA,QAAMc,QAAQ,GAAGZ,MAAM,CAAC,IAAD,CAAvB,CAJ4B,CAM5B;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIJ;AACA;AACA;AAGA;;AACAa,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBT,KAArB;AACAN,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,QAAIa,QAAQ,CAACG,OAAb,EAAsB;AACpBH,MAAAA,QAAQ,CAACG,OAAT,GAAmB,KAAnB;AACA;AACD;;AACDJ,IAAAA,OAAO,CAACN,KAAD,CAAP;AAED,GARM,EAQJ,CAACA,KAAD,CARI,CAAT;;AAUI,MAAGC,OAAH,EAAW;AACP,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAGD,sBACI;AAAA,2BAKI,QAAC,cAAD;AAAgB,MAAA,YAAY,EAAE,CAA9B;AAAiC,MAAA,KAAK,EAAEI;AAAxC;AAAA;AAAA;AAAA;AAAA;AALJ,mBADJ;AAcH;;GAlFQN,K;;KAAAA,K;AAoFT,eAAeA,KAAf","sourcesContent":["import React,{useState,useEffect, useRef} from 'react'\nimport PaginatedItems from './PaginatedItems';\nimport Pagination from './Pagination';\nimport Posts2 from './Posts2';\n\nfunction Posts({posts,loading}) {\n    const [currentPage,setCurrentPage]=useState(1);\n    const [postsPerPage]=useState(10);\n    const [data,SetData]=useState([]);\n    const firstRun = useRef(true);\n\n    // var valueArr = posts.map(function(item){ return item.product_name });\n    // var isDuplicate = valueArr.some(function(item, idx){ \n    //     return valueArr.indexOf(item) !== idx \n    // });\n\n\n\n    // function group(posts) {\n    //     let map = new Map(posts.map(o => [o.product_name, []]));\n    //     for (let o of posts) map.get(o.product_name).push(o);\n       \n    //    let arr = [\n    //         ...[...map.values()].filter(({length}) => length > 1),\n    //         [...map.values()].filter(({length}) => length === 1).flat()\n          \n    //     ];\n    //     return <div>\n       \n\n    // <div>\n    //   {Object.keys(arr).map((key) => {\n    //      return (\n    //        <div key={key}>\n             \n    //           <h1>{arr[key][key]?.product_name}</h1>\n    //           {arr[key].map((dataItem,index) => {\n    //             return (\n    //              <li key={index}>{dataItem.product_name}</li>\n    //             )\n    //            })}\n    //        </div>\n    //      )\n    //    })}\n    //  </div>\n   \n    //     </div>\n    // }\n\n\n\n//   let indexOfLastPost = currentPage *  postsPerPage;\n//   const indexOfFirstPost = indexOfLastPost - postsPerPage;\n//   const currentPosts  = posts.slice(indexOfFirstPost,indexOfLastPost);\n\n\n//   const  paginate = (pageNumber) => setCurrentPage(pageNumber);\nconsole.log('inside',posts)\nuseEffect(() => {\n    // skip the first run\n    if (firstRun.current) {\n      firstRun.current = false;\n      return;\n    }\n    SetData(posts)\n   \n  }, [posts]);\n\n    if(loading){\n        return <h2>Loading...</h2>\n    }\n\n   \n    return (\n        <>\n\n        \n     \n            {/* <Posts2 posts={currentPosts}/> */}\n            <PaginatedItems itemsPerPage={4} posts={data}/>\n            {/* <Pagination postsPerPage={postsPerPage} totalPosts={posts.length} paginate={paginate} /> */}\n    \n      \n       \n        </>\n        \n    )\n}\n\nexport default Posts\n"]},"metadata":{},"sourceType":"module"}