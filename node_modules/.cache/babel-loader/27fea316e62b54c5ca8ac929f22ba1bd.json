{"ast":null,"code":"var _jsxFileName = \"/Users/chrishar/Desktop/untitled folder/edvora/src/components/Posts.js\";\nimport React, { useState } from 'react';\nimport Pagination from './Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Posts(_ref) {\n  let {\n    posts,\n    loading,\n    postsPerPage,\n    paginate\n  } = _ref;\n\n  // var valueArr = posts.map(function(item){ return item.product_name });\n  // var isDuplicate = valueArr.some(function(item, idx){ \n  //     return valueArr.indexOf(item) !== idx \n  // });\n  // function group(posts) {\n  //     let map = new Map(posts.map(o => [o.product_name, []]));\n  //     for (let o of posts) map.get(o.product_name).push(o);\n  //    let arr = [\n  //         ...[...map.values()].filter(({length}) => length > 1),\n  //         [...map.values()].filter(({length}) => length === 1).flat()\n  //     ];\n  //     return <div>\n  // <div>\n  //   {Object.keys(arr).map((key) => {\n  //      return (\n  //        <div key={key}>\n  //           <h1>{arr[key][key]?.product_name}</h1>\n  //           {arr[key].map((dataItem,index) => {\n  //             return (\n  //              <li key={index}>{dataItem.product_name}</li>\n  //             )\n  //            })}\n  //        </div>\n  //      )\n  //    })}\n  //  </div>\n  //     </div>\n  // }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Object.keys(posts).map(key => {\n        var _posts$key$key;\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Pagination, {\n            postsPerPage: postsPerPage,\n            totalPosts: posts.length,\n            paginate: paginate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: (_posts$key$key = posts[key][key]) === null || _posts$key$key === void 0 ? void 0 : _posts$key$key.product_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), posts[key].map((dataItem, index) => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                children: dataItem.product_name\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 18\n              }, this)\n            }, void 0, false);\n          })]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 12\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/Users/chrishar/Desktop/untitled folder/edvora/src/components/Posts.js"],"names":["React","useState","Pagination","Posts","posts","loading","postsPerPage","paginate","Object","keys","map","key","length","product_name","dataItem","index"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;;AAEA,SAASC,KAAT,OAAsD;AAAA,MAAvC;AAACC,IAAAA,KAAD;AAAOC,IAAAA,OAAP;AAAeC,IAAAA,YAAf;AAA4BC,IAAAA;AAA5B,GAAuC;;AAGlD;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAMA,MAAGF,OAAH,EAAW;AACP,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAGD,sBACI;AAAA,2BACA;AAAA,gBAECG,MAAM,CAACC,IAAP,CAAYL,KAAZ,EAAmBM,GAAnB,CAAwBC,GAAD,IAAS;AAAA;;AAChC,4BACE;AAAA,kCACH,QAAC,UAAD;AAAY,YAAA,YAAY,EAAEL,YAA1B;AAAwC,YAAA,UAAU,EAAEF,KAAK,CAACQ,MAA1D;AAAkE,YAAA,QAAQ,EAAEL;AAA5E;AAAA;AAAA;AAAA;AAAA,kBADG,eAEG;AAAA,wCAAKH,KAAK,CAACO,GAAD,CAAL,CAAWA,GAAX,CAAL,mDAAK,eAAiBE;AAAtB;AAAA;AAAA;AAAA;AAAA,kBAFH,EAIIT,KAAK,CAACO,GAAD,CAAL,CAAWD,GAAX,CAAe,CAACI,QAAD,EAAUC,KAAV,KAAoB;AAC7B,gCAAY;AAAA,qCAGhB;AAAA,0BAAiBD,QAAQ,CAACD;AAA1B,iBAASE,KAAT;AAAA;AAAA;AAAA;AAAA;AAHgB,6BAAZ;AAWL,WAZD,CAJJ;AAAA,WAAUJ,GAAV;AAAA;AAAA;AAAA;AAAA,gBADF;AAsBD,OAvBC;AAFD;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAkCH;;KApFQR,K;AAsFT,eAAeA,KAAf","sourcesContent":["import React,{useState} from 'react'\nimport Pagination from './Pagination';\n\nfunction Posts({posts,loading,postsPerPage,paginate}) {\n\n\n    // var valueArr = posts.map(function(item){ return item.product_name });\n    // var isDuplicate = valueArr.some(function(item, idx){ \n    //     return valueArr.indexOf(item) !== idx \n    // });\n\n\n\n    // function group(posts) {\n    //     let map = new Map(posts.map(o => [o.product_name, []]));\n    //     for (let o of posts) map.get(o.product_name).push(o);\n       \n    //    let arr = [\n    //         ...[...map.values()].filter(({length}) => length > 1),\n    //         [...map.values()].filter(({length}) => length === 1).flat()\n          \n    //     ];\n    //     return <div>\n       \n\n    // <div>\n    //   {Object.keys(arr).map((key) => {\n    //      return (\n    //        <div key={key}>\n             \n    //           <h1>{arr[key][key]?.product_name}</h1>\n    //           {arr[key].map((dataItem,index) => {\n    //             return (\n    //              <li key={index}>{dataItem.product_name}</li>\n    //             )\n    //            })}\n    //        </div>\n    //      )\n    //    })}\n    //  </div>\n   \n    //     </div>\n    // }\n\n\n\n\n\n    if(loading){\n        return <h2>Loading...</h2>\n    }\n\n   \n    return (\n        <>\n        <ul>\n     \n        {Object.keys(posts).map((key) => {\n         return (\n           <div key={key}>\n        <Pagination postsPerPage={postsPerPage} totalPosts={posts.length} paginate={paginate} />\n              <h1>{posts[key][key]?.product_name}</h1>\n             \n              {posts[key].map((dataItem,index) => {\n                     return (    <>\n            \n                 \n                 <li key={index}>{dataItem.product_name}\n                 \n               \n                 </li>\n                \n             \n                </>\n                     )\n               })}\n          \n           </div>\n           \n         )\n       })}\n    \n        </ul>\n       \n        </>\n        \n    )\n}\n\nexport default Posts\n"]},"metadata":{},"sourceType":"module"}