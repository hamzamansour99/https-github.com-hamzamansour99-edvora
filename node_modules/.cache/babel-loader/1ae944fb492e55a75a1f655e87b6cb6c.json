{"ast":null,"code":"var _jsxFileName = \"/Users/chrishar/Desktop/untitled folder/edvora/src/components/Posts.js\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Posts(_ref) {\n  let {\n    posts,\n    loading\n  } = _ref;\n  var valueArr = posts.map(function (item) {\n    return item.brand_name;\n  });\n  var isDuplicate = valueArr.some(function (item, idx) {\n    return valueArr.indexOf(item) !== idx;\n  });\n\n  function compareName(a, b) {\n    // converting to uppercase to have case-insensitive comparison\n    const product_name1 = a.brand_name.toUpperCase();\n    const product_name2 = b.brand_name.toUpperCase();\n    let comparison = 0;\n\n    if (product_name1 > product_name2) {\n      comparison = 1;\n    } else if (product_name1 < product_name2) {\n      comparison = -1;\n    }\n\n    return comparison;\n  }\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: [console.log('posts', posts), console.log('valueArr', valueArr), console.log('isDuplicate', isDuplicate), posts.map((post, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [console.log('compareName', post.sort(compareName)), post.product_name, ' ', post.brand_name, ' ', post.price, ' ', post.brand_name]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 18\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/Users/chrishar/Desktop/untitled folder/edvora/src/components/Posts.js"],"names":["React","useState","Posts","posts","loading","valueArr","map","item","brand_name","isDuplicate","some","idx","indexOf","compareName","a","b","product_name1","toUpperCase","product_name2","comparison","console","log","post","index","sort","product_name","price"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;;AAEA,SAASC,KAAT,OAAgC;AAAA,MAAjB;AAACC,IAAAA,KAAD;AAAOC,IAAAA;AAAP,GAAiB;AAG5B,MAAIC,QAAQ,GAAGF,KAAK,CAACG,GAAN,CAAU,UAASC,IAAT,EAAc;AAAE,WAAOA,IAAI,CAACC,UAAZ;AAAwB,GAAlD,CAAf;AACA,MAAIC,WAAW,GAAGJ,QAAQ,CAACK,IAAT,CAAc,UAASH,IAAT,EAAeI,GAAf,EAAmB;AAC/C,WAAON,QAAQ,CAACO,OAAT,CAAiBL,IAAjB,MAA2BI,GAAlC;AACH,GAFiB,CAAlB;;AAIA,WAASE,WAAT,CAAqBC,CAArB,EAAwBC,CAAxB,EAA2B;AAEvB;AACA,UAAMC,aAAa,GAAIF,CAAC,CAACN,UAAF,CAAaS,WAAb,EAAvB;AACA,UAAMC,aAAa,GAAIH,CAAC,CAACP,UAAF,CAAaS,WAAb,EAAvB;AAEA,QAAIE,UAAU,GAAG,CAAjB;;AAEA,QAAIH,aAAa,GAAGE,aAApB,EAAmC;AAC/BC,MAAAA,UAAU,GAAG,CAAb;AACH,KAFD,MAEO,IAAIH,aAAa,GAAGE,aAApB,EAAmC;AACtCC,MAAAA,UAAU,GAAG,CAAC,CAAd;AACH;;AACD,WAAOA,UAAP;AACH;;AAGD,MAAGf,OAAH,EAAW;AACP,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAGD,sBACI;AAAA,eACKgB,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBlB,KAApB,CADL,EAEKiB,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBhB,QAAvB,CAFL,EAGAe,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BZ,WAA1B,CAHA,EAOKN,KAAK,CAACG,GAAN,CAAU,CAACgB,IAAD,EAAMC,KAAN,kBAEN;AAAA,iBACQH,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BC,IAAI,CAACE,IAAL,CAAUX,WAAV,CAA1B,CADR,EAEAS,IAAI,CAACG,YAFL,EAGA,GAHA,EAIAH,IAAI,CAACd,UAJL,EAKA,GALA,EAMAc,IAAI,CAACI,KANL,EAOA,GAPA,EAQAJ,IAAI,CAACd,UARL;AAAA,OAASe,KAAT;AAAA;AAAA;AAAA;AAAA,YAFJ,CAPL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH;;KAtDQrB,K;AAwDT,eAAeA,KAAf","sourcesContent":["import React,{useState} from 'react'\n\nfunction Posts({posts,loading}) {\n\n\n    var valueArr = posts.map(function(item){ return item.brand_name });\n    var isDuplicate = valueArr.some(function(item, idx){ \n        return valueArr.indexOf(item) !== idx \n    });\n\n    function compareName(a, b) {\n\n        // converting to uppercase to have case-insensitive comparison\n        const product_name1 =  a.brand_name.toUpperCase();\n        const product_name2 =  b.brand_name.toUpperCase();\n    \n        let comparison = 0;\n    \n        if (product_name1 > product_name2) {\n            comparison = 1;\n        } else if (product_name1 < product_name2) {\n            comparison = -1;\n        }\n        return comparison;\n    }\n\n  \n    if(loading){\n        return <h2>Loading...</h2>\n    }\n\n   \n    return (\n        <ul>\n            {console.log('posts',posts)}\n            {console.log('valueArr',valueArr)}\n       {console.log('isDuplicate',isDuplicate)}\n\n         \n\n            {posts.map((post,index)=>(\n          \n                 <li key={index}>\n                       { console.log('compareName',post.sort(compareName))}\n                {post.product_name}\n                {' '}\n                {post.brand_name}\n                {' '}\n                {post.price}\n                {' '}\n                {post.brand_name}\n               </li>    \n            )\n                )}\n        </ul>\n    )\n}\n\nexport default Posts\n"]},"metadata":{},"sourceType":"module"}