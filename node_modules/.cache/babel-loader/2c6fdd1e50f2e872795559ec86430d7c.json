{"ast":null,"code":"var _jsxFileName = \"/Users/chrishar/Desktop/untitled folder/edvora/src/components/Posts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Pagination from './Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Posts(_ref) {\n  _s();\n\n  let {\n    posts,\n    loading\n  } = _ref;\n  // var valueArr = posts.map(function(item){ return item.product_name });\n  // var isDuplicate = valueArr.some(function(item, idx){ \n  //     return valueArr.indexOf(item) !== idx \n  // });\n  // function group(posts) {\n  //     let map = new Map(posts.map(o => [o.product_name, []]));\n  //     for (let o of posts) map.get(o.product_name).push(o);\n  //    let arr = [\n  //         ...[...map.values()].filter(({length}) => length > 1),\n  //         [...map.values()].filter(({length}) => length === 1).flat()\n  //     ];\n  //     return <div>\n  // <div>\n  //   {Object.keys(arr).map((key) => {\n  //      return (\n  //        <div key={key}>\n  //           <h1>{arr[key][key]?.product_name}</h1>\n  //           {arr[key].map((dataItem,index) => {\n  //             return (\n  //              <li key={index}>{dataItem.product_name}</li>\n  //             )\n  //            })}\n  //        </div>\n  //      )\n  //    })}\n  //  </div>\n  //     </div>\n  // }\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(2);\n  let indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Object.keys(currentPosts).map(key => {\n        var _posts$key$key;\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: (_posts$key$key = posts[key][key]) === null || _posts$key$key === void 0 ? void 0 : _posts$key$key.product_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), currentPosts[key].map((dataItem, index) => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: dataItem.product_name\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 18\n              }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n                postsPerPage: postsPerPage,\n                totalPosts: posts.length,\n                paginate: paginate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 18\n              }, this)]\n            }, void 0, true);\n          })]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 12\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Posts, \"sQms2UXlo18FE3B2ua0iGW+URUE=\");\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/Users/chrishar/Desktop/untitled folder/edvora/src/components/Posts.js"],"names":["React","useState","Pagination","Posts","posts","loading","currentPage","setCurrentPage","postsPerPage","indexOfLastPost","indexOfFirstPost","currentPosts","slice","paginate","pageNumber","Object","keys","map","key","product_name","dataItem","index","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;;AAEA,SAASC,KAAT,OAAgC;AAAA;;AAAA,MAAjB;AAACC,IAAAA,KAAD;AAAOC,IAAAA;AAAP,GAAiB;AAG5B;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA,QAAM,CAACC,WAAD,EAAaC,cAAb,IAA6BN,QAAQ,CAAC,CAAD,CAA3C;AACA,QAAM,CAACO,YAAD,IAAeP,QAAQ,CAAC,CAAD,CAA7B;AAEA,MAAIQ,eAAe,GAAGH,WAAW,GAAIE,YAArC;AACA,QAAME,gBAAgB,GAAGD,eAAe,GAAGD,YAA3C;AACA,QAAMG,YAAY,GAAIP,KAAK,CAACQ,KAAN,CAAYF,gBAAZ,EAA6BD,eAA7B,CAAtB;;AACA,QAAOI,QAAQ,GAAIC,UAAD,IAAgBP,cAAc,CAACO,UAAD,CAAhD;;AAEA,MAAGT,OAAH,EAAW;AACP,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAGD,sBACI;AAAA,2BACA;AAAA,gBAECU,MAAM,CAACC,IAAP,CAAYL,YAAZ,EAA0BM,GAA1B,CAA+BC,GAAD,IAAS;AAAA;;AACvC,4BACE;AAAA,kCAEG;AAAA,wCAAKd,KAAK,CAACc,GAAD,CAAL,CAAWA,GAAX,CAAL,mDAAK,eAAiBC;AAAtB;AAAA;AAAA;AAAA;AAAA,kBAFH,EAIIR,YAAY,CAACO,GAAD,CAAZ,CAAkBD,GAAlB,CAAsB,CAACG,QAAD,EAAUC,KAAV,KAAoB;AACpC,gCAAY;AAAA,sCAGhB;AAAA,0BAAiBD,QAAQ,CAACD;AAA1B,iBAASE,KAAT;AAAA;AAAA;AAAA;AAAA,sBAHgB,eAOhB,QAAC,UAAD;AAAY,gBAAA,YAAY,EAAEb,YAA1B;AAAwC,gBAAA,UAAU,EAAEJ,KAAK,CAACkB,MAA1D;AAAkE,gBAAA,QAAQ,EAAET;AAA5E;AAAA;AAAA;AAAA;AAAA,sBAPgB;AAAA,4BAAZ;AAWL,WAZD,CAJJ;AAAA,WAAUK,GAAV;AAAA;AAAA;AAAA;AAAA,gBADF;AAsBD,OAvBC;AAFD;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAkCH;;GAzFQf,K;;KAAAA,K;AA2FT,eAAeA,KAAf","sourcesContent":["import React,{useState} from 'react'\nimport Pagination from './Pagination';\n\nfunction Posts({posts,loading}) {\n\n\n    // var valueArr = posts.map(function(item){ return item.product_name });\n    // var isDuplicate = valueArr.some(function(item, idx){ \n    //     return valueArr.indexOf(item) !== idx \n    // });\n\n\n\n    // function group(posts) {\n    //     let map = new Map(posts.map(o => [o.product_name, []]));\n    //     for (let o of posts) map.get(o.product_name).push(o);\n       \n    //    let arr = [\n    //         ...[...map.values()].filter(({length}) => length > 1),\n    //         [...map.values()].filter(({length}) => length === 1).flat()\n          \n    //     ];\n    //     return <div>\n       \n\n    // <div>\n    //   {Object.keys(arr).map((key) => {\n    //      return (\n    //        <div key={key}>\n             \n    //           <h1>{arr[key][key]?.product_name}</h1>\n    //           {arr[key].map((dataItem,index) => {\n    //             return (\n    //              <li key={index}>{dataItem.product_name}</li>\n    //             )\n    //            })}\n    //        </div>\n    //      )\n    //    })}\n    //  </div>\n   \n    //     </div>\n    // }\n\n\n    const [currentPage,setCurrentPage]=useState(1);\n    const [postsPerPage]=useState(2);\n\n    let indexOfLastPost = currentPage *  postsPerPage;\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\n    const currentPosts  = posts.slice(indexOfFirstPost,indexOfLastPost);\n    const  paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n    if(loading){\n        return <h2>Loading...</h2>\n    }\n\n   \n    return (\n        <>\n        <ul>\n     \n        {Object.keys(currentPosts).map((key) => {\n         return (\n           <div key={key}>\n      \n              <h1>{posts[key][key]?.product_name}</h1>\n             \n              {currentPosts[key].map((dataItem,index) => {\n                     return (    <>\n            \n                 \n                 <li key={index}>{dataItem.product_name}\n                 \n               \n                 </li>\n                 <Pagination postsPerPage={postsPerPage} totalPosts={posts.length} paginate={paginate} />\n             \n                </>\n                     )\n               })}\n          \n           </div>\n           \n         )\n       })}\n    \n        </ul>\n       \n        </>\n        \n    )\n}\n\nexport default Posts\n"]},"metadata":{},"sourceType":"module"}