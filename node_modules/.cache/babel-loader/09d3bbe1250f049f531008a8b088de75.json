{"ast":null,"code":"var _jsxFileName = \"/Users/chrishar/Desktop/untitled folder/edvora/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Posts from './components/Posts';\nimport Pagination from './components/Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [product, Setproduct] = useState('0');\n  const [city, SetCity] = useState('0');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(10);\n\n  const fetchPosts = async () => {\n    setLoading(true);\n    const res = await axios.get('https://assessment-edvora.herokuapp.com');\n    setPosts(res.data);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n\n  function compareName(a, b) {\n    // converting to uppercase to have case-insensitive comparison\n    const product_name1 = a.product_name.toUpperCase();\n    const product_name2 = b.product_name.toUpperCase();\n    let comparison = 0;\n\n    if (product_name1 > product_name2) {\n      comparison = 1;\n    } else if (product_name1 < product_name2) {\n      comparison = -1;\n    }\n\n    return comparison;\n  }\n\n  function group(posts) {\n    let map = new Map(posts.map(o => [o.product_name, []]));\n\n    for (let o of posts) map.get(o.product_name).push(o);\n\n    return [...[...map.values()].filter(_ref => {\n      let {\n        length\n      } = _ref;\n      return length > 1;\n    }), [...map.values()].filter(_ref2 => {\n      let {\n        length\n      } = _ref2;\n      return length === 1;\n    }).flat()];\n  } //Get current posts\n  // let indexOfLastPost = currentPage *  postsPerPage;\n  // const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  // const currentPosts  = group(posts.sort(compareName)).slice(indexOfFirstPost,indexOfLastPost);\n\n\n  const currentPosts = group(posts.sort(compareName)); // Change Page\n  // const  paginate = (pageNumber) => setCurrentPage(pageNumber);\n  // Filter Product Name\n\n  const seenProduct = new Set();\n  const seenCity = new Set();\n  const filteredArrProduct = posts.filter(el => {\n    if (city === '0') {\n      const duplicate = seenProduct.has(el.product_name);\n      seenProduct.add(el.product_name);\n      return !duplicate;\n    }\n\n    if (product === '0') {\n      const duplicate = seenCity.has(el.address.city);\n      seenCity.add(el.address.city);\n      return !duplicate;\n    }\n  });\n  console.log(filteredArrProduct);\n  const filteredProduct = posts.filter(function (el) {\n    return el.product_name === product;\n  });\n  const filteredCity = posts.filter(function (el) {\n    return el.address.city === city;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"App\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"products\",\n        children: \"Prodcuts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"products\",\n        id: \"products\",\n        onChange: e => {\n          Setproduct(e.target.value);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 0,\n          children: \"Products\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 3\n        }, this), filteredArrProduct.map((fil, index) => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: fil.product_name,\n            children: fil.product_name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"city\",\n        id: \"city\",\n        onChange: e => {\n          SetCity(e.target.value);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 0,\n          children: \"City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 3\n        }, this), filteredArrProduct.map((fil, index) => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: fil.address.city,\n            children: fil.address.city\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), product === '0' ? Object.keys(currentPosts).map(key => {\n      var _currentPosts$key$key;\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: (_currentPosts$key$key = currentPosts[key][key]) === null || _currentPosts$key$key === void 0 ? void 0 : _currentPosts$key$key.product_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Posts, {\n          posts: currentPosts[key],\n          loading: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 14\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"hey\", /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: filteredProduct[1].product_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Posts, {\n        posts: filteredProduct,\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n} // <Pagination postsPerPage={postsPerPage} totalPosts={posts.length} paginate={paginate} />\n\n\n_s(App, \"MpkgK1/bGdC5fUKBsEIHLXGJ9No=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/chrishar/Desktop/untitled folder/edvora/src/App.js"],"names":["React","useState","useEffect","axios","Posts","Pagination","App","posts","setPosts","loading","setLoading","product","Setproduct","city","SetCity","currentPage","setCurrentPage","postsPerPage","fetchPosts","res","get","data","compareName","a","b","product_name1","product_name","toUpperCase","product_name2","comparison","group","map","Map","o","push","values","filter","length","flat","currentPosts","sort","seenProduct","Set","seenCity","filteredArrProduct","el","duplicate","has","add","address","console","log","filteredProduct","filteredCity","e","target","value","fil","index","Object","keys","key"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Posts from './components/Posts';\nimport Pagination from './components/Pagination';\n\n\n\nfunction App() {\n\n  const [posts,setPosts]=useState([]);\n  const [loading,setLoading]= useState(false);\n  const [product,Setproduct] = useState('0');\n  const [city,SetCity] = useState('0');\n  const [currentPage,setCurrentPage]=useState(1);\n  const [postsPerPage]=useState(10);\n\n  const fetchPosts = async ()=>{\n    setLoading(true);\n    const res = await axios.get('https://assessment-edvora.herokuapp.com');\n    setPosts(res.data);\n    setLoading(false);\n  }\n  useEffect(()=>{\n    fetchPosts();\n  },[]); \n\n  function compareName(a, b) {\n\n    // converting to uppercase to have case-insensitive comparison\n    const product_name1 =  a.product_name.toUpperCase();\n    const product_name2 =  b.product_name.toUpperCase();\n\n    let comparison = 0;\n\n    if (product_name1 > product_name2) {\n        comparison = 1;\n    } else if (product_name1 < product_name2) {\n        comparison = -1;\n    }\n    return comparison;\n}\n\nfunction group(posts) {\n  let map = new Map(posts.map(o => [o.product_name, []]));\n  for (let o of posts) map.get(o.product_name).push(o);\n \n  return [\n      ...[...map.values()].filter(({length}) => length > 1),\n      [...map.values()].filter(({length}) => length === 1).flat()\n    \n  ];\n\n \n}\n\n  //Get current posts\n\n  // let indexOfLastPost = currentPage *  postsPerPage;\n  // const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  // const currentPosts  = group(posts.sort(compareName)).slice(indexOfFirstPost,indexOfLastPost);\n\n  const currentPosts  = group(posts.sort(compareName));\n\n  // Change Page\n\n  // const  paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  // Filter Product Name\n  const seenProduct = new Set();\n  const seenCity = new Set();\n  const filteredArrProduct = posts.filter(el => {\n    if(city==='0'){\n      const duplicate = seenProduct.has(el.product_name);\n      seenProduct.add(el.product_name);\n      return !duplicate;\n    }\n    if(product==='0'){\n      const duplicate = seenCity.has(el.address.city);\n      seenCity.add(el.address.city);\n      return !duplicate;\n    }\n \n  });\nconsole.log(filteredArrProduct)\n  \n\n  const filteredProduct = posts.filter(function (el){\n     return  el.product_name===product    \n  });\n\n  const filteredCity = posts.filter(function (el){\n    return  el.address.city===city   \n    \n });\n\n\n  return (\n\n    <div>\n    \n     \n      App\n      <div>\n      \n       \n  \n  <label htmlFor=\"products\">Prodcuts</label>\n  <select name=\"products\" id=\"products\" onChange={(e)=>{\n   \n    Setproduct(e.target.value)}\n    \n    }>\n  <option value={0}>Products</option>   \n    {filteredArrProduct.map((fil,index)=>{\n      return  <option  key={index} value={fil.product_name}>{fil.product_name}</option>\n    })}\n  \n  </select>\n  <br/><br/>\n\n\n  <label htmlFor=\"city\">City</label>\n  <select name=\"city\" id=\"city\" onChange={(e)=>{\n   \n    SetCity(e.target.value)} \n    }>\n  <option value={0}>City</option>   \n    {filteredArrProduct.map((fil,index)=>{\n      return  <option  key={index} value={fil.address.city}>{fil.address.city}</option>\n    })}\n  \n  </select>\n  <br/><br/>\n \n\n      </div>\n      {product==='0'?\n          Object.keys(currentPosts).map((key) => {\n\n         \n         return (\n          <div key={key}>\n       \n          <h1>{currentPosts[key][key]?.product_name}</h1>\n         \n\n             <Posts  posts={currentPosts[key]} loading={loading}/>  \n      \n       </div>\n\n\n        \n    \n           \n         )\n       })\n      :\n      \n      <div>\n        hey\n\n      \n       <h1>{filteredProduct[1].product_name}</h1>\n         <Posts  posts={filteredProduct} loading={loading}/> \n      </div>\n      }\n    \n     \n    </div>\n  );\n}\n\n// <Pagination postsPerPage={postsPerPage} totalPosts={posts.length} paginate={paginate} />\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}